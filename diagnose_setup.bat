@echo off
chcp 65001 > nul
title –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Arvis

echo ========================================
echo  –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –£–°–¢–ê–ù–û–í–ö–ò ARVIS
echo ========================================
echo.

REM –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –ª–æ–≥–∞
set LOG_FILE=setup_diagnostic_%date:~-4,4%%date:~-7,2%%date:~-10,2%_%time:~0,2%%time:~3,2%%time:~6,2%.log
set LOG_FILE=%LOG_FILE: =0%

echo –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–≥–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: %LOG_FILE%
echo. > %LOG_FILE%
echo ======================================== >> %LOG_FILE%
echo –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Arvis >> %LOG_FILE%
echo –í—Ä–µ–º—è: %date% %time% >> %LOG_FILE%
echo ======================================== >> %LOG_FILE%
echo. >> %LOG_FILE%

REM === 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Python ===
echo [1/10] –ü—Ä–æ–≤–µ—Ä–∫–∞ Python...
python --version > nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Python –ù–ï –ù–ê–ô–î–ï–ù >> %LOG_FILE%
    echo ‚ùå Python –ù–ï –ù–ê–ô–î–ï–ù!
    echo.
    echo üîß –†–ï–®–ï–ù–ò–ï:
    echo    1. –°–∫–∞—á–∞–π—Ç–µ Python 3.11.9 –∏–ª–∏ 3.12.x —Å https://python.org
    echo    2. –ü—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –û–¢–ú–ï–¢–¨–¢–ï "Add Python to PATH"
    echo    3. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä
    echo    4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞
    echo.
    goto :END
) else (
    for /f "tokens=2" %%i in ('python --version 2^>^&1') do set PYTHON_VERSION=%%i
    echo ‚úÖ Python –Ω–∞–π–¥–µ–Ω: %PYTHON_VERSION% >> %LOG_FILE%
    echo ‚úÖ Python: %PYTHON_VERSION%
)

REM === 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python ===
echo [2/10] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –≤–µ—Ä—Å–∏–∏ Python...
echo %PYTHON_VERSION% | findstr /C:"3.13" >nul
if %errorlevel% equ 0 (
    echo ‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: Python 3.13 >> %LOG_FILE%
    echo ‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: Python 3.13 –ù–ï –ü–û–î–î–ï–†–ñ–ò–í–ê–ï–¢–°–Ø!
    echo.
    echo üîß –†–ï–®–ï–ù–ò–ï:
    echo    1. –£–¥–∞–ª–∏—Ç–µ Python 3.13
    echo    2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.11.9 –∏–ª–∏ 3.12.x
    echo    3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: rmdir /s /q venv
    echo    4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: setup_arvis.bat
    echo.
    echo üìñ –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: docs\PYTHON_313_COMPATIBILITY.md
    echo.
    set /p CONTINUE="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É? (Y/N): "
    if /i not "%CONTINUE%"=="Y" goto :END
) else (
    echo ‚úÖ –í–µ—Ä—Å–∏—è —Å–æ–≤–º–µ—Å—Ç–∏–º–∞ >> %LOG_FILE%
    echo ‚úÖ –í–µ—Ä—Å–∏—è —Å–æ–≤–º–µ—Å—Ç–∏–º–∞
)

REM === 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ pip ===
echo [3/10] –ü—Ä–æ–≤–µ—Ä–∫–∞ pip...
python -m pip --version > nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå pip –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç >> %LOG_FILE%
    echo ‚ùå pip –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!
    echo.
    echo üîß –†–ï–®–ï–ù–ò–ï:
    echo    python -m ensurepip --default-pip
    echo.
    goto :END
) else (
    for /f "tokens=*" %%i in ('python -m pip --version 2^>^&1') do (
        echo ‚úÖ %%i >> %LOG_FILE%
        echo ‚úÖ %%i
    )
)

REM === 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ venv –º–æ–¥—É–ª—è ===
echo [4/10] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª—è venv...
python -c "import venv" 2>nul
if %errorlevel% neq 0 (
    echo ‚ùå –ú–æ–¥—É–ª—å venv –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω >> %LOG_FILE%
    echo ‚ùå –ú–æ–¥—É–ª—å venv –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!
    echo.
    echo üîß –†–ï–®–ï–ù–ò–ï:
    echo    –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python —Å –æ–ø—Ü–∏–µ–π "pip" –∏ "tcl/tk"
    echo.
    goto :END
) else (
    echo ‚úÖ –ú–æ–¥—É–ª—å venv –¥–æ—Å—Ç—É–ø–µ–Ω >> %LOG_FILE%
    echo ‚úÖ –ú–æ–¥—É–ª—å venv –¥–æ—Å—Ç—É–ø–µ–Ω
)

REM === 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ venv ===
echo [5/10] –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...
if exist "venv" (
    echo ‚úÖ venv —Å—É—â–µ—Å—Ç–≤—É–µ—Ç >> %LOG_FILE%
    echo ‚úÖ venv —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

    REM –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
    call venv\Scripts\activate.bat 2>nul
    if %errorlevel% equ 0 (
        python -c "print('test')" >nul 2>&1
        if %errorlevel% equ 0 (
            echo ‚úÖ venv —Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å —Ç–µ–∫—É—â–∏–º Python >> %LOG_FILE%
            echo ‚úÖ venv —Å–æ–≤–º–µ—Å—Ç–∏–º–æ
            echo.

            REM –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –í venv
            echo üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ –≤ venv:
            echo –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ –≤ venv: >> %LOG_FILE%

            python -c "import PyQt6; print('‚úÖ PyQt6:', PyQt6.__version__)" 2>nul
            if %errorlevel% neq 0 (
                echo ‚ùå PyQt6 –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ venv >> %LOG_FILE%
                echo ‚ùå PyQt6 –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ venv
                set MISSING_PACKAGES=1
            ) else (
                for /f "tokens=*" %%i in ('python -c "import PyQt6; print('PyQt6:', PyQt6.__version__)" 2^>nul') do (
                    echo ‚úÖ %%i >> %LOG_FILE%
                )
            )

            python -c "import requests; print('‚úÖ Requests:', requests.__version__)" 2>nul
            if %errorlevel% neq 0 (
                echo ‚ùå Requests –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ venv >> %LOG_FILE%
                echo ‚ùå Requests –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ venv
                set MISSING_PACKAGES=1
            ) else (
                for /f "tokens=*" %%i in ('python -c "import requests; print('Requests:', requests.__version__)" 2^>nul') do (
                    echo ‚úÖ %%i >> %LOG_FILE%
                )
            )

            python -c "import torch; print('‚úÖ PyTorch:', torch.__version__)" 2>nul
            if %errorlevel% neq 0 (
                echo ‚ùå PyTorch –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ venv >> %LOG_FILE%
                echo ‚ùå PyTorch –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ venv
                set MISSING_PACKAGES=1
            ) else (
                for /f "tokens=*" %%i in ('python -c "import torch; print('PyTorch:', torch.__version__)" 2^>nul') do (
                    echo ‚úÖ %%i >> %LOG_FILE%
                )
            )

            python -c "import vosk; print('‚úÖ Vosk: OK')" 2>nul
            if %errorlevel% neq 0 (
                echo ‚ö†Ô∏è  Vosk –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ venv >> %LOG_FILE%
                echo ‚ö†Ô∏è  Vosk –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –¥–ª—è STT)
            ) else (
                echo ‚úÖ Vosk: OK >> %LOG_FILE%
            )

            if defined MISSING_PACKAGES (
                echo. >> %LOG_FILE%
                echo ‚ùå –ö—Ä–∏—Ç–∏—á–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ venv! >> %LOG_FILE%
                echo.
                echo ‚ùå –ö—Ä–∏—Ç–∏—á–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ venv!
                echo.
                echo üîß –†–ï–®–ï–ù–ò–ï:
                echo    quick_install_fix.bat
                echo    –ò–õ–ò
                echo    install_packages_only.bat
                echo.
                echo üí° –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –ø–∞–∫–µ—Ç—ã –≥–ª–æ–±–∞–ª—å–Ω–æ
                echo    –û–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –í–ù–£–¢–†–ò venv!
                echo.
            ) else (
                echo ‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã >> %LOG_FILE%
                echo ‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
            )

            REM –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤ –≤ –ª–æ–≥
            echo. >> %LOG_FILE%
            echo –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤: >> %LOG_FILE%
            pip list >> %LOG_FILE% 2>&1
        ) else (
            echo ‚ùå venv –ù–ï —Å–æ–≤–º–µ—Å—Ç–∏–º–æ —Å Python %PYTHON_VERSION% >> %LOG_FILE%
            echo ‚ùå venv –ù–ï —Å–æ–≤–º–µ—Å—Ç–∏–º–æ!
            echo.
            echo üîß –†–ï–®–ï–ù–ò–ï:
            echo    1. –ó–∞–∫—Ä–æ–π—Ç–µ –≤—Å–µ —Ç–µ—Ä–º–∏–Ω–∞–ª—ã –∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä—ã
            echo    2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: fix_venv.bat
            echo    –ò–õ–ò
            echo    1. rmdir /s /q venv
            echo    2. setup_arvis.bat
            echo.
        )
        call venv\Scripts\deactivate.bat 2>nul
    ) else (
        echo ‚ùå venv –ø–æ–≤—Ä–µ–∂–¥–µ–Ω >> %LOG_FILE%
        echo ‚ùå venv –ø–æ–≤—Ä–µ–∂–¥–µ–Ω!
        echo.
        echo üîß –†–ï–®–ï–ù–ò–ï: fix_venv.bat
        echo.
    )
) else (
    echo ‚ö†Ô∏è  venv –Ω–µ —Å–æ–∑–¥–∞–Ω >> %LOG_FILE%
    echo ‚ö†Ô∏è  venv –Ω–µ —Å–æ–∑–¥–∞–Ω - –∑–∞–ø—É—Å—Ç–∏—Ç–µ setup_arvis.bat
)

REM === 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ ===
echo [6/10] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞...
echo test > temp_write_test.txt 2>nul
if exist "temp_write_test.txt" (
    echo ‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –µ—Å—Ç—å >> %LOG_FILE%
    echo ‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –µ—Å—Ç—å
    del temp_write_test.txt
) else (
    echo ‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ >> %LOG_FILE%
    echo ‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!
    echo.
    echo üîß –†–ï–®–ï–ù–ò–ï:
    echo    –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    echo.
)

REM === 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ ===
echo [7/10] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ...
for /f "tokens=3" %%a in ('dir %~d0 ^| findstr /C:"bytes free"') do set FREE_SPACE=%%a
echo –°–≤–æ–±–æ–¥–Ω–æ –Ω–∞ –¥–∏—Å–∫–µ: %FREE_SPACE% –±–∞–π—Ç >> %LOG_FILE%
echo ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞

REM === 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫ ===
echo [8/10] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...
set MISSING_FOLDERS=
if not exist "config" (
    echo ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞–ø–∫–∞: config >> %LOG_FILE%
    set MISSING_FOLDERS=%MISSING_FOLDERS% config
)
if not exist "modules" (
    echo ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞–ø–∫–∞: modules >> %LOG_FILE%
    set MISSING_FOLDERS=%MISSING_FOLDERS% modules
)
if not exist "src" (
    echo ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞–ø–∫–∞: src >> %LOG_FILE%
    set MISSING_FOLDERS=%MISSING_FOLDERS% src
)
if not exist "utils" (
    echo ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞–ø–∫–∞: utils >> %LOG_FILE%
    set MISSING_FOLDERS=%MISSING_FOLDERS% utils
)

if defined MISSING_FOLDERS (
    echo ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–∞–ø–∫–∏:%MISSING_FOLDERS%
    echo.
    echo üîß –†–ï–®–ï–ù–ò–ï:
    echo    –°–∫–∞—á–∞–π—Ç–µ –ø–æ–ª–Ω—ã–π –ø—Ä–æ–µ–∫—Ç —Å GitHub
    echo.
) else (
    echo ‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ >> %LOG_FILE%
    echo ‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞
)

REM === 9. –ü—Ä–æ–≤–µ—Ä–∫–∞ requirements.txt –∏ config.json ===
echo [9/10] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...

if exist "requirements.txt" (
    echo ‚úÖ requirements.txt –Ω–∞–π–¥–µ–Ω >> %LOG_FILE%
    echo ‚úÖ requirements.txt –Ω–∞–π–¥–µ–Ω
) else (
    echo ‚ùå requirements.txt –ù–ï –Ω–∞–π–¥–µ–Ω >> %LOG_FILE%
    echo ‚ùå requirements.txt –ù–ï –Ω–∞–π–¥–µ–Ω!
    echo.
    echo üîß –†–ï–®–ï–ù–ò–ï:
    echo    –°–∫–∞—á–∞–π—Ç–µ requirements.txt —Å GitHub
    echo.
)

if exist "config\config.json" (
    echo ‚úÖ config.json –Ω–∞–π–¥–µ–Ω >> %LOG_FILE%
    echo ‚úÖ config.json –Ω–∞–π–¥–µ–Ω
) else (
    echo ‚ùå config.json –ù–ï –Ω–∞–π–¥–µ–Ω >> %LOG_FILE%
    echo ‚ùå config.json –ù–ï –Ω–∞–π–¥–µ–Ω!
    echo.
    echo üîß –†–ï–®–ï–ù–ò–ï:
    echo    create_config.bat
    echo    –ò–õ–ò
    echo    copy config\config.json.example config\config.json
    echo.
)

REM === 10. –ü—Ä–æ–≤–µ—Ä–∫–∞ Ollama ===
echo [10/10] –ü—Ä–æ–≤–µ—Ä–∫–∞ Ollama...
where ollama > nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ö†Ô∏è  Ollama –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω >> %LOG_FILE%
    echo ‚ö†Ô∏è  Ollama –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    echo.
    echo üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:
    echo    1. –°–∫–∞—á–∞–π—Ç–µ Ollama —Å https://ollama.ai
    echo    2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ
    echo    3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: ollama pull llama3.2
    echo.
) else (
    echo ‚úÖ Ollama —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω >> %LOG_FILE%
    echo ‚úÖ Ollama —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω

    tasklist | findstr "ollama" > nul
    if %errorlevel% neq 0 (
        echo ‚ö†Ô∏è  Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω >> %LOG_FILE%
        echo ‚ö†Ô∏è  Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω
        echo    –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ollama serve
    ) else (
        echo ‚úÖ Ollama —Ä–∞–±–æ—Ç–∞–µ—Ç >> %LOG_FILE%
        echo ‚úÖ Ollama —Ä–∞–±–æ—Ç–∞–µ—Ç
    )
)

echo.
echo ========================================
echo     –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê
echo ========================================
echo.
echo üìÑ –ü–æ–ª–Ω—ã–π –ª–æ–≥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: %LOG_FILE%
echo.

:END
echo üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:
echo    - quick_install_fix.bat       (–±—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤)
echo    - install_packages_only.bat   (—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ–ª—å–∫–æ –ø–∞–∫–µ—Ç–æ–≤)
echo    - create_config.bat           (—Å–æ–∑–¥–∞—Ç—å config.json)
echo    - setup_arvis.bat             (–ø–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞)
echo    - fix_venv.bat                (–ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å venv)
echo    - fix_pyaudio.bat             (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PyAudio)
echo.
echo üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:
echo    - YOUR_CASE_FIX.md                        (–¥–ª—è –≤–∞—à–µ–≥–æ —Å–ª—É—á–∞—è!)
echo    - INSTALLATION_HELP.md                    (–∫—Ä–∞—Ç–∫–∞—è –ø–æ–º–æ—â—å)
echo    - docs\SERVER_INSTALL_TROUBLESHOOTING.md  (–ø–æ–ª–Ω—ã–π –≥–∞–π–¥)
echo    - QUICK_FIX.md                            (—à–ø–∞—Ä–≥–∞–ª–∫–∞)
echo.
pause
