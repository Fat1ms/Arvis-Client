"""
–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
"""

import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent))


def run_all_checks():
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("=" * 70)
    print("–§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´")
    print("=" * 70)
    print()

    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ë–î
    print("1Ô∏è‚É£  –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("-" * 70)
    import sqlite3

    try:
        conn = sqlite3.connect("data/users.db")
        cursor = conn.cursor()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–æ–Ω–æ–∫
        cursor.execute("PRAGMA table_info(users)")
        columns = [col[1] for col in cursor.fetchall()]

        required_columns = ["backup_codes", "two_factor_setup_at"]
        missing = [col for col in required_columns if col not in columns]

        if missing:
            print(f"   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–ª–æ–Ω–∫–∏: {missing}")
        else:
            print(f"   ‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç ({len(columns)} –∫–æ–ª–æ–Ω–æ–∫)")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute("SELECT COUNT(*) FROM users")
        user_count = cursor.fetchone()[0]
        print(f"   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ: {user_count}")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∞
        cursor.execute("SELECT username, role, is_active FROM users WHERE username='admin'")
        admin = cursor.fetchone()

        if admin:
            print(f"   ‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–∞–π–¥–µ–Ω: {admin[0]} ({admin[1]}, {'–∞–∫—Ç–∏–≤–µ–Ω' if admin[2] else '–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω'})")
        else:
            print(f"   ‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ù–ï –Ω–∞–π–¥–µ–Ω!")

        conn.close()

    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î: {e}")

    print()

    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ —Å –ø–∞—Ä–æ–ª–µ–º
    print("2Ô∏è‚É£  –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–ê –° –ü–ê–†–û–õ–ï–ú")
    print("-" * 70)
    password_file = Path("data/.admin_password.txt")
    if password_file.exists():
        with open(password_file, "r") as f:
            content = f.read()
            password_line = [line for line in content.split("\n") if "Password:" in line][0]
            password = password_line.split(": ")[1]
            print(f"   ‚úÖ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            print(f"   üìù –ü–∞—Ä–æ–ª—å: {password}")
    else:
        print(f"   ‚ö†Ô∏è  –§–∞–π–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –µ—Å–ª–∏ —É–∂–µ —É–¥–∞–ª—ë–Ω)")

    print()

    # 3. –¢–µ—Å—Ç –≤—Ö–æ–¥–∞
    print("3Ô∏è‚É£  –¢–ï–°–¢ –í–•–û–î–ê –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê")
    print("-" * 70)
    try:
        from utils.security.auth import get_auth_manager

        auth_manager = get_auth_manager()
        session = auth_manager.authenticate("admin", "u1Y054gAxX1-pc6T")

        if session:
            user = auth_manager.validate_session(session.session_id)
            print(f"   ‚úÖ –í—Ö–æ–¥ –£–°–ü–ï–®–ï–ù!")
            print(f"   üìã Username: {user.username}")
            print(f"   üîë Role: {user.role.value}")
            print(f"   üÜî Session: {session.session_id[:20]}...")
        else:
            print(f"   ‚ùå –í—Ö–æ–¥ –ù–ï –£–î–ê–õ–°–Ø!")

    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {e}")

    print()

    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤
    print("4Ô∏è‚É£  –ü–†–û–í–ï–†–ö–ê –£–¢–ò–õ–ò–¢")
    print("-" * 70)
    scripts = ["migrate_db.py", "create_admin.py", "check_admin.py", "test_login.py"]

    for script in scripts:
        if Path(script).exists():
            print(f"   ‚úÖ {script}")
        else:
            print(f"   ‚ùå {script} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

    print()

    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    print("5Ô∏è‚É£  –ü–†–û–í–ï–†–ö–ê –î–û–ö–£–ú–ï–ù–¢–ê–¶–ò–ò")
    print("-" * 70)
    docs = [
        "ADMIN_QUICKFIX.md",
        "ADMIN_LOGIN_CHEATSHEET.txt",
        "docs/ADMIN_LOGIN_FIX.md",
        "docs/ADMIN_LOGIN_FIX_REPORT.md",
    ]

    for doc in docs:
        if Path(doc).exists():
            print(f"   ‚úÖ {doc}")
        else:
            print(f"   ‚ùå {doc} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

    print()
    print("=" * 70)
    print("‚úÖ –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
    print("=" * 70)
    print()
    print("üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
    print("   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Arvis: python main.py")
    print("   2. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ admin —Å –ø–∞—Ä–æ–ª–µ–º: u1Y054gAxX1-pc6T")
    print("   3. –°–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ‚öôÔ∏è ‚Üí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Üí –°–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è")
    print("   4. –£–¥–∞–ª–∏—Ç–µ —Ñ–∞–π–ª: Remove-Item data\\.admin_password.txt")
    print()


if __name__ == "__main__":
    run_all_checks()
